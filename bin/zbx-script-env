#!/bin/bash
case $1 in
    -h | --help )zbx.-h $0 && exit;;
    -e | --edit )$EDITOR $0;exit;;
    -c | --cat )cat $0;exit;;
esac
## Exports many useful variables that may be used in session (or subshells).
## For performance reasons should not be called directly in scripts,
## only through use of `zbx-script-header` that is usually sourced at top
## of script providing variables and -h flag.
## 
## Also ensures environment, by setting services up and cloning base repo if needed.

export ZBX_BOX_ROOT=$(cd $(dirname $0)/../;pwd)

[ ! -f "$ZBX_BOX_ROOT/.env" ] && >&2 echo "Not found: $ZBX_BOX_ROOT/.env" && exit 4
source $ZBX_BOX_ROOT/.env

mkdir -p $WORKTREE/{master,{feature,release}}

[ ! -d "$WORKTREE/master/.git" ] && git clone $GITREMOTE $WORKTREE/master
[ ! -f "$WORKTREE/master/.git/hooks/deployed" ] \
    && cp -RTf --symbolic-link "$ZBX_BOX_ROOT/git.hooks" "$WORKTREE/master/.git/hooks"

# TODO bake these things: webgrind, opcache-gui, into dashboard
[ ! -f "$WORKTREE/opcache-gui.php" ] && \
    wget https://raw.githubusercontent.com/amnuts/opcache-gui/master/index.php -O $WORKTREE/opcache-gui.php

[ ! -f "$WORKTREE/adminer-4.7.6.php" ] && \
    wget https://github.com/vrana/adminer/releases/download/v4.7.6/adminer-4.7.6.php -O $WORKTREE/adminer-4.7.6.php

[ ! -f "$WORKTREE/phpinfo.php" ] && echo '<?php phpinfo();' > "$WORKTREE/phpinfo.php"

export ZBX_ENV_SOURCED=1

#- URL to reop
export WORKTREE=$WORKTREE
export GITREMOTE=$GITREMOTE
export WEBTLD=$WEBTLD
export JIRAUSER=$JIRAUSER
export JIRAURL=$JIRAURL
export BITBUCKET_PROJECT=$BITBUCKET_PROJECT
export PHP_VERSION=$PHP_VERSION

export PATH=$PATH:$ZBX_BOX_ROOT/bin/util

REFS=
ls-remote() {
    if [ -z $REFS ]; then
        # REFS=$(git ls-remote --refs --heads $GITREMOTE | sed 's|^.*heads/||g')
        # query server less, to get recent list do git fetch at this path
        REFS=$(git ls-remote $WORKTREE/master/.git 'refs/remotes/origin/*' | awk -F'origin/' '{print $2}')
    fi
    echo "$REFS"
}

export LOCALREFS=$(cd $WORKTREE/master && git worktree list --porcelain | ag '^branch' | sed 's#^.*heads/##')

# TODO: use labels.
[ -z "$(docker network ls -f name='^zbx-box$' -q)" ] && docker network create zbx-box \
    | zbx-util-color -H "docker network create zbx-box"

[ -z "$(docker volume ls -f name='^zbx-box$' -q)" ] && docker volume create \
    --driver local \
    --opt type=none \
    --opt device=$WORKTREE \
    --opt o=bind \
    --name zbx-box \
    | zbx-util-color -H "docker volume create zbx-box (device=$WORKTREE)"

[ -z "$(docker volume ls -f name='^zbx-box-db-oracle$' -q)" ] && docker volume create zbx-box-db-oracle \
    | zbx-util-color -H "docker volume create zbx-box-db-oracle"

[ -z "$(docker volume ls -f name='^zbx-box-db-postgres$' -q)" ] && docker volume create zbx-box-db-postgres \
    | zbx-util-color -H "docker volume create zbx-box-db-postgres"

# Fixin docker permissions to write (needed for linux only)
sudo chmod -R o+rw $WORKTREE

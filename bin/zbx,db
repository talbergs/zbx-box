#!/bin/bash
### Usage: $0 <zref?> [FLAGS..]
## Feeds inital sql's into database (by default named same as \$REF). They do need to be build first.
## For this do execute this:
##         zbx,make --database
## If no shema.sql is found you will be prompted to agree to do this for you.
## Example:
##         $0 -P -S
##         # This will determine ref based on \$PWD, then build postgresql database
##         # then add selenium data.sql topping.
## Example:
##         $0 -P -S -N "v2"
##         # This will determine ref based on \$PWD, then build postgresql database
##         # then add selenium data.sql topping and ensure database name has affix "v2"
## Example:
##         $0 4.0 -P -S -N "v2"
##         # Same as above, except "release/4.0" is used as \$REF
## Example:
##         $0 4.0 -P -M -S
##         # Note: all swithces are applied in order they are passed to command.
##         # First is created postgres db, then mariadb, both got selenium topping.
##~

source zbx-script-header
source zbx-get-ref

postgres() {
    zbx-util-color -H "DROP DATABASE IF EXISTS \"$DBNAME\""
    docker exec zbx-box-postgres psql -q -U postgres -c "DROP DATABASE IF EXISTS \"$DBNAME\""
    zbx-util-color -H "CREATE DATABASE \"$DBNAME\""
    docker exec zbx-box-postgres psql -q -U postgres -c "CREATE DATABASE \"$DBNAME\""
    zbx-util-color -H "postgresql/schema.sql"
    docker exec zbx-box-postgres psql -q -U postgres -d "$DBNAME" --file /var/www/html/$REF/database/postgresql/schema.sql
    zbx-util-color -H "postgresql/images.sql"
    docker exec zbx-box-postgres psql -q -U postgres -d "$DBNAME" --file /var/www/html/$REF/database/postgresql/images.sql
    zbx-util-color -H "postgresql/data.sql"
    docker exec zbx-box-postgres psql -q -U postgres -d "$DBNAME" --file /var/www/html/$REF/database/postgresql/data.sql

    if [ ! -z $selenium ];then
        zbx-util-color -H "selenium/data/data_test.sql"
        docker exec zbx-box-postgres psql -q -U postgres -d "$DBNAME" --file /var/www/html/$REF/frontends/php/tests/selenium/data/data_test.sql
    fi

    if [ ! -z $apijson ];then
        zbx-util-color -H "api_json/data/data_test.sql"
        docker exec zbx-box-postgres psql -q -U postgres -d "$DBNAME" --file /var/www/html/$REF/frontends/php/tests/api_json/data/data_test.sql
    fi
}

mariadb() {
    zbx-util-color -H "DROP DATABASE IF EXISTS \"$DBNAME\""
    docker exec zbx-box-mariadb mysql -uroot -pzabbix -e "DROP DATABASE IF EXISTS \`$DBNAME\`"
    zbx-util-color -H "CREATE DATABASE \"$DBNAME\""
    docker exec zbx-box-mariadb mysql -uroot -pzabbix -e "CREATE DATABASE \`$DBNAME\` CHARACTER SET utf8 COLLATE utf8_bin;"
    zbx-util-color -H "mysql/schema.sql"
    docker exec zbx-box-mariadb mysql -uroot -pzabbix -D "$DBNAME" -e "source /var/www/html/$REF/database/mysql/schema.sql"
    zbx-util-color -H "mysql/images.sql"
    docker exec zbx-box-mariadb mysql -uroot -pzabbix -D "$DBNAME" -e "source /var/www/html/$REF/database/mysql/images.sql"
    zbx-util-color -H "mysql/data.sql"
    docker exec zbx-box-mariadb mysql -uroot -pzabbix -D "$DBNAME" -e "source /var/www/html/$REF/database/mysql/data.sql"

    if [ ! -z $selenium ];then
        zbx-util-color -H "selenium/data/data_test.sql"
        docker exec zbx-box-mariadb mysql -uroot -pzabbix -D "$DBNAME" -e "source /var/www/html/$REF/frontends/php/tests/selenium/data/data_test.sql"
    fi

    if [ ! -z $apijson ];then
        zbx-util-color -H "api_json/data/data_test.sql"
        docker exec zbx-box-mariadb mysql -uroot -pzabbix -D "$DBNAME" -e "source /var/www/html/$REF/frontends/php/tests/api_json/data/data_test.sql"
    fi
}

oracle-11g() {
    sqls=/var/www/html/$REF/database/oracle
    sql="
        ALTER SYSTEM SET DB_CREATE_FILE_DEST=\"/tmp\";
        SHOW PARAMETER DB_CREATE_FILE_DEST;
        DROP USER \"$DBNAME\" CASCADE;
        DROP TABLESPACE \"$DBNAME\" INCLUDING CONTENTS AND DATAFILES;
        CREATE TABLESPACE \"$DBNAME\" DATAFILE '$DBNAME.dat' SIZE 40M ONLINE;
        ALTER DATABASE DATAFILE '$DBNAME.dat' AUTOEXTEND ON NEXT 10M MAXSIZE UNLIMITED;
        CREATE USER \"$DBNAME\" IDENTIFIED BY \"$DBNAME\" DEFAULT TABLESPACE \"$DBNAME\" TEMPORARY TABLESPACE TEMP;
        GRANT ALL PRIVILEGES TO \"$DBNAME\";
        GRANT CONNECT TO \"$DBNAME\";
        CONNECT \"$DBNAME\"/\"$DBNAME\"@XE;
        SELECT table_name FROM all_tables WHERE tablespace_name='$DBNAME';
        WHENEVER SQLERROR EXIT 5;
        WHENEVER OSERROR EXIT 10;
        @$sqls/schema-patched.sql $DBNAME;
        @$sqls/images-patched.sql $DBNAME;
        @$sqls/data-patched.sql $DBNAME;
        SELECT table_name FROM all_tables WHERE tablespace_name='$DBNAME';
        EXIT;
    "

    echo "$sql" > $WORKTREE/$REF/database/oracle/refresh-11g.sql

    sed \
        -e 's/nvarchar2(2048)/nvarchar2(2000)/g' \
        -e "s/\sscript\s.*\$/script nclob DEFAULT '' ,/g" \
        -e "s/\soldvalue\s.*\$/oldvalue nclob DEFAULT '' ,/g" \
        -e "s/\snewvalue\s.*\$/newvalue nclob DEFAULT '' ,/g" \
        $WORKTREE/$REF/database/oracle/schema.sql > $WORKTREE/$REF/database/oracle/schema-patched.sql

    sed "1s|'.*'|'/var/www/html/$REF/misc/images'|" $WORKTREE/$REF/database/oracle/images.sql > $WORKTREE/$REF/database/oracle/images-patched.sql

    case "$(zbx,version $REF --major)" in
        5.0 | 4.4)
            sed '/^INSERT INTO media_type/,+3d' $WORKTREE/$REF/database/oracle/data.sql > $WORKTREE/$REF/database/oracle/data-patched.sql
        ;;
        * | 4.2 | 4.0 | 3.4 | 3.2 | 3.0 )
            cat $WORKTREE/$REF/database/oracle/data.sql > $WORKTREE/$REF/database/oracle/data-patched.sql
        ;;
    esac

    docker exec zbx-box-oracle-11g bash -c "echo 'EXIT;' | sqlplus -s 'system/zabbix@XE' @/var/www/html/$REF/database/oracle/refresh-11g.sql"
    # docker exec zbx-box-oracle-11g bash -c "/var/www/html/sqlcl/bin/sql 'system/zabbix@XE' @/var/www/html/$REF/database/oracle/refresh.sql"
}

oracle-19c() {
    sqls=/var/www/html/$REF/database/oracle
    sql="
        ALTER SYSTEM SET DB_CREATE_FILE_DEST=\"/tmp\";
        SHOW PARAMETER DB_CREATE_FILE_DEST;
        ALTER SESSION SET \"_ORACLE_SCRIPT\"=true;
        COMMIT;
        DROP USER \"$DBNAME\" CASCADE;
        DROP TABLESPACE \"$DBNAME\" INCLUDING CONTENTS AND DATAFILES;
        CREATE TABLESPACE \"$DBNAME\" DATAFILE '$DBNAME.dat' SIZE 40M ONLINE;
        ALTER DATABASE DATAFILE '$DBNAME.dat' AUTOEXTEND ON NEXT 10M MAXSIZE UNLIMITED;
        CREATE USER \"$DBNAME\" IDENTIFIED BY \"$DBNAME\" DEFAULT TABLESPACE \"$DBNAME\" TEMPORARY TABLESPACE TEMP;
        GRANT ALL PRIVILEGES TO \"$DBNAME\";
        GRANT CONNECT TO \"$DBNAME\";
        CONNECT \"$DBNAME\"/\"$DBNAME\";
        SELECT table_name FROM all_tables WHERE tablespace_name='$DBNAME';
        WHENEVER SQLERROR EXIT 5;
        WHENEVER OSERROR EXIT 10;
        @$sqls/schema-patched.sql $DBNAME;
        @$sqls/images-patched.sql $DBNAME;
        @$sqls/data-patched.sql $DBNAME;
        SELECT table_name FROM all_tables WHERE tablespace_name='$DBNAME';
        EXIT;
    "

    echo "$sql" > $WORKTREE/$REF/database/oracle/refresh.sql

    # https://stackoverflow.com/a/25452936/2644170 # nvarchar2
    # https://support.zabbix.com/browse/ZBXNEXT-5335
    sed 's/nvarchar2(2048)/nvarchar2(2000)/g' $WORKTREE/$REF/database/oracle/schema.sql > $WORKTREE/$REF/database/oracle/schema-patched.sql
    sed "1s|'.*'|'/var/www/html/$REF/misc/images'|" $WORKTREE/$REF/database/oracle/images.sql > $WORKTREE/$REF/database/oracle/images-patched.sql

    case "$(zbx,version $REF --major)" in
        5.0 | 4.4)
            # https://support.zabbix.com/browse/ZBX-17512
            sed '/^INSERT INTO media_type/,+3d' $WORKTREE/$REF/database/oracle/data.sql > $WORKTREE/$REF/database/oracle/data-patched.sql
        ;;
        * | 4.2 | 4.0 | 3.4 | 3.2 | 3.0 )
            cat $WORKTREE/$REF/database/oracle/data.sql > $WORKTREE/$REF/database/oracle/data-patched.sql
        ;;
    esac

    docker exec zbx-box-oracle-19c bash -c "echo 'EXIT;' | sqlplus -s '/ as sysdba' @/var/www/html/$REF/database/oracle/refresh.sql"
    # docker exec zbx-box-oracle-19c bash -c "/var/www/html/sqlcl/bin/sql '/ as sysdba' @/var/www/html/$REF/database/oracle/refresh.sql"
}

oracle-19c-query() {
    docker exec -it zbx-box-oracle-19c sqlplus "$DBNAME/$DBNAME@INDIA"
}

oracle-11g-query() {
    docker exec -it zbx-box-oracle-11g sqlplus "$DBNAME/$DBNAME@XE"
}

postgres-query() {
    docker exec -it zbx-box-postgres psql -q -U postgres -d "$DBNAME"
}

ex_dbs=()
while [[ $# > 0 ]];do case $1 in
    #- Apply database to postgres service.
    -P  | --postgres ) ex_dbs+=(postgres) ;;
    #- Quick open repl (use current database).
    -Pq | --postgres-query ) ex_dbs+=(postgres-query) ;;
    # TODO: some issues here still to fix..
    #- <{WIP}> Apply database to mariadb service.
    -M  | --mariadb ) ex_dbs+=(mariadb) ;;
    #- Apply database to oracle-19c (new) service.
    -On | --oracle-19c ) ex_dbs+=(oracle-19c) ;;
    #- Apply database to oracle-11g (old) service.
    -Oo | --oracle-11g ) ex_dbs+=(oracle-11g) ;;
    #- Quick open repl (use current database).
    -Onq| --oracle-19c-query ) ex_dbs+=(oracle-19c-query) ;;
    #- Quick open repl (use current database).
    -Ooq| --oracle-11g-query ) ex_dbs+=(oracle-11g-query) ;;
    #- Apply "api_json" data set.
    -A  | --api-json ) apijson=1 ;;
    #- Apply "selenium" data set.
    -S  | --selenium ) selenium=1 ;;
    #- <[a-z\-_]> Add affix to database name
    -N  | --named ) shift; affix=$1 ;;
esac;shift;done

DBNAME=$(basename ${REF}${affix})
for ex_db in ${ex_dbs[*]}; do
    $ex_db
done

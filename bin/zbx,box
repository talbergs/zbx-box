#!/bin/bash
### Usage: $0 [FLAG?] [SERVICE?..]
## Mini orchestrator for a service.
## If no flag is given - "--compose" flag is implied.
## Example:
##         $0
##         # A menu will list all available services, the chosen ones will be rised.
## Example:
##         $0 caddy postgres
##         # This will rise explicitly services.
## Example:
##         $0 --rm oracle
##         # This will remove explicitly listed services.
## Example:
##         $0 --rm
##         # A menu will list all available services, the chosen ones will be removed.
source zbx-script-header

if [[ "$2" =~ ^-.* ]]; then
    >&2 echo "At most one switch is allowed!"
    exit 2
fi

remove-image() {
    docker rmi $(zbx-image-id $1) \
        | zbx-util-color -H "Removing image for '$1'"
}

restart-service() {
    zbx-util-color -H "Restarting '$1' .."
    docker restart $(docker ps -q --filter name="$1")
}

compose-service() {
    # TODO: This deletes all stopped containers.
    docker container prune --filter="label=zbx-box" --force

    name=$1
    case $name in
        php54-fpm | php72-fpm | php74-fpm )
            zbx-compose $name \
                --user $(id -u):$(id -g) \
                --volume "$ZBX_BOX_ROOT"/cfg/$name/php.ini:/usr/local/etc/php/conf.d/zabbix.ini \
                --volume "$ZBX_BOX_ROOT"/cfg/$name/fpm.conf:/usr/local/etc/php-fpm.d/zabbix.conf \
                --volume "$ZBX_BOX_ROOT"/decoration:/decoration
        ;;
        oracle-11g)
            zbx-util-color -H "It takes 3 minutes to start, watch container logs for string 'DATABASE IS READY TO USE!' to appear."
            zbx-util-color -H ".. Also no database persistance will be preserved. If service stop, all data will be lost."
            zbx-compose $name \
                --cpus 8 \
                -p 1521:1521 \
                -p 5500:5500 \
                -p 8001:8080 \
                --shm-size=4g \
                --rm
        ;;
        oracle-19c)
            zbx-util-color -H "It takes 3 minutes to start, watch container logs for string 'DATABASE IS READY TO USE!' to appear."
            zbx-util-color -H ".. Also no database persistance will be preserved. If service stop, all data will be lost."
            zbx-compose $name \
                --cpus 8 \
                -p 1522:1521 \
                -p 5501:5500 \
                -p 8002:8080 \
                --shm-size=4g \
                --rm
        ;;
        postgres)
            zbx-compose $name \
                --volume zbx-box-db-postgres:/var/lib/postgresql/data
        ;;
        caddy)
            zbx-compose $name \
                --publish 80:80 \
                --publish 443:443 \
                --publish 2019:2019 \
                --volume "$ZBX_BOX_ROOT"/cfg/$name/config.json:/config.json \
                --volume "$ZBX_BOX_ROOT"/cfg/$name/Caddyfile:/Caddyfile
        ;;
        mailhog)
            zbx-compose $name \
                --publish 8025:8025
        ;;
        * )
            >&2 echo "Unknown service '$name'";
        ;;
    esac
}

actions=(compose-service)
action_name="Spin up service"
# action_name="Alt+[c,b,x,q,r,s]"
# keybinds=("--bind" "alt-c:execute(echo {})'")
# keybinds=("--expect" "alt-c,alt-x'")
if [[ "$1" =~ ^-.* ]]; then
    case $1 in
        #- Lift up the service (will build image if neeed).
        -C | --compose )
            action_name="Spin up service"
            actions=(compose-service) ;;
        #- Remove image (all layers) for this this service.
        -R | --rmi )
            action_name="Remove image"
            actions=(remove-image) ;;
        #- Restart service.
        -X | --restart )
            action_name="Restart service"
            actions=(restart-service) ;;
        #- Stop and remove container.
        -S | --stop )
            action_name="Stop and remove container"
            actions=(zbx-decompose) ;;
        #- Rebuild image for this service (using cache).
        -B | --build )
            action_name="Build image"
            actions=(zbx-image-build) ;;
        #- For testing -- teardown service -> build semage -> spin up
        -Q | --devel ) actions=(zbx-decompose zbx-image-build compose-service) ;;
        *) >&2 echo "Unknown parameter passed: $1"; exit 1;;
    esac
    shift
fi

if [[ $# > 0 ]];then
    services="${@}"
else
    services=$(ls $ZBX_BOX_ROOT/build | fzf \
        --multi ${keybinds[*]} \
        --header "Action to apply: '$action_name'" \
        --prompt "$action_name >")
fi
for service in ${services[*]};do
    for action in ${actions[*]}; do
        $action $service
    done
done

# TODO: show [x] or [ ] within list, then parse it out
# TODO: show preview less (if no flags given only then)
# TODO: bind keys to do action and put in fzf multiline header
# --preview 'zbx-compose-status {}' \
# --preview-window=up \

#!/bin/bash
source zbx-script-header
### Usage: program 2>&1 | $0 [ARGS..]
##
## Outputs program STDOUT to file in tmp and shows preview only.

# TODO: implement height bounded scrolling buffer

HEIGHT=0
while [[ $# > 0 ]];do case $1 in
    #- If this flag is given STDIN strem will be shown in preview box.
    #- Complete output will be then placed in tmp file.
    #- Optionally accepts positive number of lines to show. Defaults to 5.
    -P | --preview-size) HEIGHT=${2:-5}; (shift) ;;
    #- Print current stream header. Accepts a string as argument.
    -H | --header) HEADER=${2:-5}; (shift) ;;
    #- Use error mode - as if STDERR was piped into this.
    -E | --error) ERROR_MODE=1 ;;
esac;shift;done

padding_x="    "
width=$(tput cols)
width=$((width - 16))
log_file_ext=stdout
color=8
if [ ! -z $ERROR_MODE ]; then
    log_file_ext=stderr
    color=9
fi

preview() {
    local linenr=0
    local height=$1

    while read -n $width line; do
        tput el # clear to end of line
        printf "${padding_x}$(tput setaf $color)${line}$(tput sgr 0)${padding_x}\n"
        linenr=$((linenr+1))
        if [ -z $height ];then continue; fi

        if [ $linenr -eq $height ];then while [ $linenr -ne 0 ]; do
            tput cuu1 # up one line
            linenr=$((linenr-1))
        done fi
    done

    tput ed # clear to end of screen
}

[ ! -z "${HEADER}" ] && echo "$(tput setaf 5)${HEADER}$(tput sgr 0)"
[ ! -p /dev/stdin ] && exit

if [ $HEIGHT != 0 ]; then
    STDOUT_FILE="/tmp/a.stdouet"
    echo "${HEADER}" > "$STDOUT_FILE"
    tee -a "$STDOUT_FILE" | preview $HEIGHT
else
    cat /dev/stdin | preview
fi
